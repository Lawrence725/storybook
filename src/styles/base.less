// Reset
*                                           { margin: 0; padding: 0; scroll-behavior: smooth; user-select: none; -ms-user-select: none; -webkit-user-select: none; touch-action: manipulation;
    &:visited                               { color: inherit; }}
html, body                                  { overscroll-behavior-x: none; }
*, span, p, h1, h2, h3, h4, h5, h6, div, a,
select, input, textarea, button, ol, ul     { font-size: @fM; font-family: 'Quicksand', 'Roboto'; }
span, p, h1, h2, h3, h4, h5, h6, div,
input, textarea, ol, ul                     { color: @cG1; overflow-wrap: break-word; }
a                                           { color: inherit; text-decoration: none !important; }
a:hover                                     { cursor: pointer;
    @media screen and (min-width: @sD)      { box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.2); }}
button                                      { border: none; }
button:hover                                { cursor: pointer;
    @media screen and (min-width: @sD)      { box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.2); }}
input                                       { border: 0; padding: 0; -webkit-text-fill-color: @cG1; background-color: transparent; }
input:focus                                 { box-shadow: none !important; outline: none; }
input:-webkit-autofill                      { color: @c1 !important; background-color: transparent !important; box-shadow: 0 0 0px 1000px white inset !important; background-clip: content-box !important; }
input::placeholder, textarea::placeholder   { color: @cG4; -webkit-text-fill-color: @cG4; }
textarea                                    { border: 0; resize: none; }
textarea:focus                              { box-shadow: none !important; outline: none; }
select                                      { -webkit-appearance: none; -moz-appearance: none; appearance: none; outline: none; border: 0; }
select:hover                                { cursor: pointer; }
label                                       { cursor: pointer; }
img                                         { object-fit: cover; }
i, svg                                      { text-decoration: none !important; }
iframe                                      { border: 0; }
*, :after, :before                          { box-sizing: border-box !important; -webkit-box-sizing: border-box; }

// Components
.loading { top: 0; left: 0; width: 100vw; height: 100vh; position: fixed; display: flex; align-items: center; justify-content: center; z-index: 9; background-color: rgba(0,0,0,0.9);
    &.loading--transparent { background-color: transparent; pointer-events: none; }
    &.loading--full { background-color: black; }
    &.loading--inline { width: 100%; min-height: 150px; max-height: 150px; position: relative; z-index: 4; }
    > div { min-width: 120px; min-height: 120px; border-radius: 20px; display: flex; align-items: center; justify-content: center;
        img { width: 80px; border-radius: 99px; position: absolute; opacity: 0; filter: alpha(opacity=0); -webkit-animation: round 9s linear infinite; animation: round 9s linear infinite;
            &:nth-child(1) { -webkit-animation-delay: 0s; animation-delay: 0s; }
            &:nth-child(2) { -webkit-animation-delay: 3s; animation-delay: 3s; }
            &:nth-child(3) { -webkit-animation-delay: 6s; animation-delay: 6s; }}
        .loading__circle { min-width: 120px; min-height: 120px; border: 3px solid @c1; border-top: 3px solid transparent; border-radius: 50%; -webkit-animation: spin 1s linear infinite; animation: spin 1s linear infinite; }}}
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
@-webkit-keyframes spin { 0% { -webkit-transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); } }
@-webkit-keyframes round {
    5% { opacity: 1; filter: alpha(opacity=50); /* 0 - 1秒 淡入*/ }
    30% { opacity: 1; filter: alpha(opacity=100); /* 1 - 3秒靜止*/ }
    35% { opacity: 0; filter: alpha(opacity=0); /* 3 - 4秒淡出*/ }}
@keyframes round {
    5% { opacity: 1; filter: alpha(opacity=100); /* 0 - 1秒 淡入*/ }
    30% { opacity: 1; filter: alpha(opacity=100); /* 1 - 3秒靜止*/ }
    35% { opacity: 0; filter: alpha(opacity=0); /* 3 - 4秒淡出*/ }}